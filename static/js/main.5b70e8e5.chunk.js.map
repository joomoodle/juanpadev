{"version":3,"sources":["Components/Head/Styles/index.js","Components/Head/index.js","Screens/Home/Styles/index.js","Screens/Home/index.js","Routes.jsx","App.js","serviceWorker.js","index.js"],"names":["MainContainer","styled","div","SideMenu","Menu","Hamburgesa","UlMobile","ul","LinkLi","li","a","header","height","width","backgroundColor","display","flexDirection","zIndex","row","titleApp","fontSize","color","paddingLeft","paddingTop","fontWeight","listStyleType","margin","padding","textDecoration","menu","index","text","action","Head","useState","isOpen","setIsOpen","renderMenu","map","item","key","to","style","Styles","IconButton","onClick","top","position","Container","Row1","Row2","Iam","Des","Social","SocialItem","ImgSocial","img","socialMedia","id","name","link","styles","objectFill","verticalAlign","borderStyle","Home","renderSocial","href","src","process","alt","Routes","path","component","Component","browserHistory","createBrowserHistory","basename","App","className","history","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","unregister","navigator","serviceWorker","ready","then","registration","catch","error","console","message"],"mappings":"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","file":"static/js/main.5b70e8e5.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst MainContainer = styled.div`\r\n  height: 85px;\r\n  width: 100%;\r\n  background-color: #1f2235;\r\n  display: flex;\r\n  flex-direction: row;\r\n  z-index: 10;\r\n`;\r\n\r\nconst SideMenu = styled.div`\r\n  width: 70%;\r\n  flex-direction: row;\r\n`;\r\nconst Menu = styled.div`\r\n  padding-top: 20px;\r\n  padding-left: 150px;\r\n  @media (max-width: 768px) {\r\n    display: none;\r\n  }\r\n  @media (max-width: 1024px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Hamburgesa = styled.div`\r\n  display: none;\r\n\r\n  @media (max-width: 1024px) {\r\n    display: block;\r\n    padding-top: 20px;\r\n    padding-left: 85%;\r\n  }\r\n`;\r\n\r\nconst UlMobile = styled.ul`\r\n  display: flex;\r\n  -ms-flex-direction: column;\r\n  flex-direction: column;\r\n  padding-left: 0;\r\n  margin-bottom: 0;\r\n  list-style: none;\r\n`;\r\n\r\nconst LinkLi = styled.li`\r\n  display: inline;\r\n\r\n  margin: 20px;\r\n  @media (max-width: 1024px) {\r\n    display: block;\r\n    margin: 0;\r\n    margin-bottom: 20px;\r\n    padding-left: 100px;\r\n  }\r\n`;\r\n\r\nconst LinkA = styled.a`\r\n  text-decoration: none;\r\n  color: #ffffff;\r\n  font-size: 28px;\r\n`;\r\n\r\nexport { MainContainer, SideMenu, Menu, Hamburgesa, UlMobile, LinkA, LinkLi };\r\n\r\nexport default {\r\n  header: {\r\n    height: \"85px\",\r\n    width: \"100%\",\r\n    backgroundColor: \"#1F2235\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    zIndex: 10\r\n  },\r\n  row: {\r\n    width: \"30%\",\r\n    flexDirection: \"row\"\r\n  },\r\n  titleApp: {\r\n    fontSize: 28,\r\n    color: \"#fff\",\r\n    paddingLeft: 100,\r\n    paddingTop: 20,\r\n    display: \"block\",\r\n    fontWeight: \"bold\"\r\n  },\r\n\r\n  ul: {\r\n    listStyleType: \"none\",\r\n    margin: 0,\r\n    padding: 0\r\n  },\r\n  li: {\r\n    display: \"inline\",\r\n    margin: 20\r\n  },\r\n  a: {\r\n    color: \"#ffffff\",\r\n    fontSize: 28,\r\n    textDecoration: \"none\"\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport Styles, {\r\n  MainContainer,\r\n  SideMenu,\r\n  Menu,\r\n  Hamburgesa,\r\n  UlMobile,\r\n  LinkA,\r\n  LinkLi\r\n} from \"./Styles\";\r\n\r\nconst menu = [\r\n  {\r\n    index: 0,\r\n    text: \"Inicio\",\r\n    action: \"/home\"\r\n  },\r\n  {\r\n    index: 1,\r\n    text: \"Acerca de mi\",\r\n    action: \"#\"\r\n  },\r\n  {\r\n    index: 2,\r\n    text: \"Portafolio\",\r\n    action: \"#\"\r\n  },\r\n  {\r\n    index: 3,\r\n    text: \"Contacto\",\r\n    action: \"#\"\r\n  }\r\n];\r\nconst Head = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const renderMenu = () => {\r\n    return menu.map(item => (\r\n      <LinkLi key={item.index}>\r\n        <NavLink to={item.action} style={Styles.a}>\r\n          {item.text}{\" \"}\r\n        </NavLink>\r\n      </LinkLi>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <MainContainer>\r\n      <div style={Styles.row}>\r\n        <span style={Styles.titleApp}>\r\n          JuanPa<span style={{ color: \"red\" }}>.</span>Dev\r\n        </span>\r\n      </div>\r\n      <SideMenu>\r\n        <Menu>\r\n          <ul style={Styles.ul}>{renderMenu()}</ul>\r\n        </Menu>\r\n        <Hamburgesa>\r\n          <IconButton\r\n            onClick={() => {\r\n              setIsOpen(!isOpen);\r\n            }}\r\n            style={{ top: -14 }}\r\n          >\r\n            <MenuIcon style={{ color: \"#ffffff\", fontSize: 40 }} />\r\n          </IconButton>\r\n        </Hamburgesa>\r\n      </SideMenu>\r\n      {isOpen ? (\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            width: \"100%\",\r\n            backgroundColor: \"#1F2235\",\r\n            zIndex: 10,\r\n            top: 85\r\n          }}\r\n        >\r\n          <UlMobile>{renderMenu()}</UlMobile>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\nexport default Head;\r\n","import styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\nconst Row1 = styled.div`\r\n  width: 60%;\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n  }\r\n  @media (max-width: 1024px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Row2 = styled.div`\r\n  width: 40%;\r\n  @media (max-width: 768px) {\r\n    display: none;\r\n  }\r\n  @media (max-width: 1024px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Iam = styled.div`\r\n  font-size: 45px;\r\n  font-weight: bold;\r\n  padding-left: 100px;\r\n  color: #ffffff;\r\n  @media (max-width: 768px) {\r\n    text-align: center;\r\n    padding-left: 20px;\r\n  }\r\n`;\r\n\r\nconst Des = styled.div`\r\n  font-size: 40px;\r\n  color: #ffffff;\r\n  padding-left: 100px;\r\n  @media (max-width: 768px) {\r\n    text-align: center;\r\n    padding-left: 20px;\r\n  }\r\n`;\r\nconst Social = styled.div`\r\n  padding-left: 100px;\r\n  @media (max-width: 768px) {\r\n    text-align: center;\r\n    padding-left: 20px;\r\n  }\r\n`;\r\n\r\nconst SocialItem = styled.div`\r\n  margin-right: 20px;\r\n  display: inline-block;\r\n  border-radius: 50%;\r\n  width: 40px;\r\n  height: 40px;\r\n  border: 2px solid rgb(255, 74, 87);\r\n`;\r\n\r\nconst ImgSocial = styled.img`\r\n  width: 20px;\r\n  height: 20px;\r\n  position: absolute;\r\n  padding:10px;\r\n  @media (max-width: 768px) {\r\n    margin-left: -20px;\r\n  }\r\n`;\r\n\r\nexport { Container, Row1, Row2, Iam, Des, Social, SocialItem, ImgSocial };\r\n","import React, { useState } from \"react\";\r\nimport { Head } from \"../../Components\";\r\nimport {\r\n  Container,\r\n  Row1,\r\n  Row2,\r\n  Iam,\r\n  Des,\r\n  Social,\r\n  SocialItem,\r\n  ImgSocial\r\n} from \"./Styles\";\r\n\r\nconst socialMedia = [\r\n  {\r\n    id: 1,\r\n    name: \"GitHub.png\",\r\n    link: \"https://github.com/joomoodle/\"\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"facebook.png\",\r\n    link: \"https://www.facebook.com/joomoodle\"\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"instagram.png\",\r\n    link: \"https://www.instagram.com/joomoodle/\"\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"linkedin.png\",\r\n    link: \"\"\r\n  }\r\n];\r\nfunction Home() {\r\n  const renderSocial = () => {\r\n    return socialMedia.map(item => (\r\n      <SocialItem>\r\n        {item.name ? (\r\n          <a href={item.link}>\r\n            <ImgSocial src={`${process.env.PUBLIC_URL}/${item.name}`} alt=\"#\" />\r\n          </a>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </SocialItem>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Head />\r\n      <Container>\r\n        <Row1>\r\n          <div style={{ paddingTop: 150 }}>\r\n            <Social>{renderSocial()}</Social>\r\n            <Iam>Soy Juan Pablo Dionicio</Iam>\r\n            <Des>\r\n              Desarrollador web profesional con larga experiencia en este campo.\r\n            </Des>\r\n          </div>\r\n        </Row1>\r\n        <Row2>\r\n          <img\r\n            src={`${process.env.PUBLIC_URL}/dev_1.png`}\r\n            alt=\"\"\r\n            style={styles.img}\r\n          />\r\n        </Row2>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  img: {\r\n    width: \"95%\",\r\n    objectFill: \"contain\",\r\n    verticalAlign: \"middle\",\r\n    borderStyle: \"none\"\r\n  }\r\n};\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport Home from \"./Screens/Home\";\r\n\r\nexport default class Routes extends Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/\" component={Home} />\r\n        <Route path=\"/home\" component={Home} />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport const PrivateRoute = ({ component: Component, name, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props => {\r\n      const isLogged = localStorage.getItem(\"isAuthenticated\") === \"true\";\r\n      const myModules = JSON.parse(localStorage.getItem(\"_MODULES\"));\r\n      if (!isLogged) {\r\n        return <Redirect exact from=\"/\" to=\"/sign-in\" />;\r\n      }\r\n      for (let index = 0; index < myModules.length; index++) {\r\n        const element = myModules[index];\r\n        if (element.name === name) {\r\n          return <Component {...props} />;\r\n        }\r\n      }\r\n      return <Redirect to=\"/not-found\" />;\r\n    }}\r\n  />\r\n);\r\n","import React from \"react\";\r\nimport { Router } from \"react-router-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport Routes from \"./Routes\";\r\nconst historyConfig = {\r\n  basename: \"juanpadev\"\r\n};\r\n\r\nconst browserHistory = createBrowserHistory(historyConfig);\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router history={browserHistory}>\r\n        <Routes />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}